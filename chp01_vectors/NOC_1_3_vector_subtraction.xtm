;// The Nature of Code
;// Daniel Shiffman
;// Draft book
;
;// Example 1-3: Vector subtraction
;; Ported to Extempore by Jason Levine

;; setup window dims

(bind-val width float 1024.)
(bind-val height float 768.)

(sys:load "The-Nature-of-Livecoding/processing.xtm")
(sys:load "libs/core/instruments.xtm")
(sys:load "libs/core/pc_ivl.xtm")
(sys:load "libs/external/audio_dsp_ext.xtm")

(bind-instrument fmsynth fmsynth_note_c fmsynth_fx)

(bind-func dsp:DSP
  (let ((F (stft_st_c 64 512 512))
        (left:SComplex* (F.left))
        (right:SComplex* (F.right)))
    (lambda (in time chan dat)
      (cond ((< chan 2)
             (F chan
                (+ (* 1.0 (fmsynth in time chan dat))
                   0.0)))
            (else 0.0)))))

(dsp:set! dsp)

;; now sound stuff

(define root 0)

(define l2
  (lambda (beat pitch dur)
    (if (> pitch 100) (set! dur 4.))
    (play fmsynth pitch 100 .2 .5 10.)
    (callback (*metro* (+ beat (* .5 dur))) 'l2 (+ beat dur)
              (if (> pitch 100) 60 (pc:relative pitch 1 (pc:scale root 'aeolian)))
              1/6)))

;; start audio loop
(l2 (*metro* 'get-beat 4) 60 1/6)

;; setup variables
(bind-val mouse_pos vec 2)
(bind-val center vec 2)
(bind-val band_pos vec 2)

(call-as-xtlang (vec2_set center (/ width 2.) (/ height 2.)))

;; draw loop
(bind-func draw
    (let ((dl:Complexf* (dsp.left))
         (dr:Complexf* (dsp.right)))
    (lambda ()
    	(background 1.0 1.0 1.0)



        (let ((i:float 0.0) (incr (/ width 200.)))
            (dotimes (i 200.0)
                (vec2_set mouse_pos (mouse_x) (mouse_y))
                (vec2_set band_pos (convert (* incr i)) height)
                (vec2_dec mouse_pos band_pos)

                (nvgResetTransform vg)
                (translate (convert (* i incr)) height)
                (stroke_width 2.)
                (let ((alpha:float (Complex_mag (pref dr (ftoi64 i)))))
                   (stroke 0. 0. 0. alpha))
                (line 0. 0. (vec2_get_x mouse_pos) (vec2_get_y mouse_pos))


                (vec2_set mouse_pos (mouse_x) (mouse_y))
                (vec2_set band_pos (convert (* incr i)) 0.0)
                (vec2_dec mouse_pos band_pos)

                (nvgResetTransform vg)
            	(translate (convert (* i incr)) 0.0)
            	(stroke_width 2.)
                (let ((alpha:float (Complex_mag (pref dl (ftoi64 i)))))
            	   (stroke 0. 0. 0. alpha))
            	(line 0. 0. (vec2_get_x mouse_pos) (vec2_get_y mouse_pos)))))))

